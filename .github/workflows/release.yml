name: 'publish'

on:
  push:
    tags:
      - 'v*.*.*'

jobs:
  # changelog:
  #   runs-on: ubuntu-latest
  #   outputs:
  #     changelog: ${{ steps.release-drafter.outputs.body }}
  #   permissions:
  #     contents: write
  #     pull-requests: read
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v4

  #     - name: Release changelog
  #       id: release-drafter
  #       uses: release-drafter/release-drafter@v6
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  #     - name: Ensure non-empty changelog
  #       id: final-changelog
  #       run: |
  #         CHANGELOG="${{ steps.release-drafter.outputs.body }}"
  #         if [ -z "$CHANGELOG" ]; then
  #           CHANGELOG="## 🚀 新版本发布\n\n此版本包含各种改进和错误修复。"
  #         fi
  #         echo "changelog<<EOF" >> $GITHUB_OUTPUT
  #         echo "$CHANGELOG" >> $GITHUB_OUTPUT
  #         echo "EOF" >> $GITHUB_OUTPUT

  publish-tauri:
    # needs: changelog
    permissions:
      contents: write
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: 'macos-latest'
            args: '--target aarch64-apple-darwin'
          - platform: 'macos-latest'
            args: '--target x86_64-apple-darwin'
          - platform: 'ubuntu-22.04'
            args: ''
          - platform: 'windows-latest'
            args: ''

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*

      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: install frontend dependencies
        run: yarn install

      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tagName: v__VERSION__
          releaseName: 'MTP v__VERSION__'
          # releaseBody: ${{ needs.changelog.outputs.changelog }}
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args }}
